{"version":3,"sources":["./src/app/services/compilador.service.ts","fs (ignored)","path (ignored)","./src/Backend/src_backend/index.ts","./src/Backend/build/Xml/XmlResultado.js","./src/environments/environment.ts","./src/app/components/arbol-ast/arbol-ast.component.ts","./src/app/components/arbol-ast/arbol-ast.component.html","./src/app/components/tabla-errores/tabla-errores.component.ts","./src/app/components/tabla-errores/tabla-errores.component.html","./src/Backend/build/Xml/EtiquetaDoble.js","./src/Backend/build/Xml/Atributo.js","./src/Backend/build/Xml/Tabla.js","./src/Backend/build/Grammar/xmlA.js","./src/Backend/build/Xpath/TipoSeleccion.js","./src/Backend/build/Xml/Tipos.js","./src/app/app.component.ts","./src/app/app.component.html","./src/Backend/src_backend/Reportes/TablaSimbolos.ts","./src/Backend/build/Xml/EtiquetaSimple.js","./src/app/components/editor/editor.component.ts","./src/app/components/editor/editor.component.html","./src/app/app.module.ts","./src/Backend/build/Xpath/TipoVal.js","./src/app/components/tabla-simbolos/tabla-simbolos.component.html","./src/app/components/tabla-simbolos/tabla-simbolos.component.ts","./src/Backend/build/Xml/Fila.js","./src/Backend/build/Graficas/Graficas.js","./src/Backend/build/Xml/EtiquetaInicio.js","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAgE;;;AAChE,8DAA8D;AAIvD,MAAM,iBAAiB;IAC5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,QAAQ,CAAC,MAAc;QACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QAInB,+EAAY,CAAC,MAAM,CAAC;QACpB,IAAI,GAAG,GAAG;YACR,OAAO,EAAE,+EAAY,CAAC,MAAM,CAAC,CAAC,OAAO;YACrC,GAAG,EAAC,+EAAY,CAAC,MAAM,CAAC,CAAC,GAAG;SAE7B;QACD,OAAO,GAAG;IACZ,CAAC;IAED,YAAY,CAAC,GAAQ;QACnB,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,oCAAoC,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;;kFApBU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;ACNpB,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;ACGA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACX;AAM7C,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,qDAAqD;AAO9C,SAAS,YAAY,CAAC,OAAe;IAE1C,uDAAuD;IACvD,qEAAa,CAAC,GAAG,GAAG,EAAE,CAAC;IACvB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,MAAM,IAAI,GAAiB,6DAAM,CAAC,KAAK,CAAC,OAAO,CAAC;IAChD,iFAAiF;IACjF,kCAAkC;IAClC,uBAAuB;IACvB,yCAAyC;IACzC,iDAAiD;IAGjD,8DAA8D;IAC9D;;;;;;;;;;;;;;;;;;IAkBA;IAKA,uDAAuD;IAMvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IACxC,qBAAqB;IACrB,iCAAiC;IACjC,IAAI,GAAG,GAAE;QACR,GAAG,EAAC,IAAI,CAAC,UAAU,EAAE;QACrB,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK;KAGhC;IACD,OAAO,GAAG;AAEZ,CAAC;;;;;;;;;;;;;ACzEY;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kCAAsB;AACjD,gBAAgB,mBAAO,CAAC,qBAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;AC/EA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,iBAAiB;IAG5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFANU,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEAA8C;QAC1C,yEAA0B;QACtB,wEAAgD;QAC5C,wEAA4B;QACxB,uEAA6D;QAAA,oEAAS;QAAA,4DAAI;QAC9E,4DAAK;QACT,4DAAK;QACT,4DAAM;QACN,oEAA6H;QACjI,4DAAM;;;;;;;;;;;;;;;;;;ACFC,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,yEAA8C;QAC1C,yEAA0B;QACtB,wEAAgD;QAC5C,wEAA4B;QACxB,uEAA6D;QAAA,2EAAgB;QAAA,4DAAI;QACrF,4DAAK;QACT,4DAAK;QACL,yEAAmC;QAC/B,yEAAuB;QACnB,gEAAI;QACJ,yEAAwC;QACpC,4EAA8C;QAC1C,yEAAO;QACH,sEAAI;QACA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QACpB,4DAAK;QACT,4DAAQ;QACR,yEAAO;QACH,sEAAI;QACA,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACV,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACV,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACV,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACd,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACN,iEAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;AClCO;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kCAAsB;AACjD,eAAe,mBAAO,CAAC,oBAAQ;AAC/B,gBAAgB,mBAAO,CAAC,qBAAS;AACjC,gBAAgB,mBAAO,CAAC,qBAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW,aAAa,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe,aAAa,iBAAiB,kBAAkB,gBAAgB;AAC5H;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChMa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kCAAsB;AACjD,eAAe,mBAAO,CAAC,oBAAQ;AAC/B,gBAAgB,mBAAO,CAAC,qBAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,oCAAwB;AACxD,kBAAkB,mBAAO,CAAC,8BAAkB;AAC5C;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7FA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB,eAAe,KAAK;AACxE,SAAS,UAAU,EAAE;AACrB,kBAAkB,0BAA0B,EAAE;AAC9C,cAAc;AACd,mBAAmB,kcAAkc;AACrd,qBAAqB,sQAAsQ;AAC3R;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iBAAiB,2DAA2D,GAAG,SAAS,GAAG,mCAAmC,GAAG,0CAA0C,GAAG,0BAA0B,mBAAmB,iEAAiE,mBAAmB,oDAAoD,GAAG,0CAA0C,GAAG,YAAY,mBAAmB,+BAA+B,oBAAoB,cAAc,GAAG,8CAA8C,GAAG,iBAAiB,mBAAmB,cAAc,GAAG,4CAA4C,qCAAqC,YAAY,GAAG,cAAc,oBAAoB,cAAc;AAC5uB,yBAAyB,sCAAsC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW,gBAAgB,GAAG,mBAAO,CAAC,kCAAsB;AAC5D,WAAW,iBAAiB,GAAG,mBAAO,CAAC,mCAAuB;AAC9D,WAAW,iBAAiB,GAAG,mBAAO,CAAC,mCAAuB;AAC9D,WAAW,WAAW,GAAG,mBAAO,CAAC,6BAAiB;AAClD,WAAW,eAAe,GAAG,mBAAO,CAAC,iCAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,yBAAyB,eAAe,oCAAoC,kBAAkB,wEAAwE,iBAAiB,4CAA4C,cAAc,6DAA6D;AAC9S,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAI,IAAgE;AACpE;AACA;AACA,iCAAiC,0CAA0C;AAC3E;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC9D;AACA;AACA,QAAQ,KAA6B,IAAI,4CAAY;AACrD;AACA;AACA;;;;;;;;;;;;;;AC7sBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,CAAC,sEAAsE;;;;;;;;;;;;;ACN1D;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Analizar_XML } from './../../Backend/src_backend/index'\n//import { Analizar_XML } from '../Backend/src_backend/index';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompiladorService {\n  constructor(private http: HttpClient) { }\n\n  analizar(codigo: string) {\n    console.log(codigo)\n\n\n\n    Analizar_XML(codigo)\n    var alv = {\n      simbolo: Analizar_XML(codigo).simbolo,\n      cst:Analizar_XML(codigo).cst\n      \n    }\n    return alv\n  }\n\n  getAstBase64(ast: any): Observable<any> {\n    const json = { ast: ast }\n    return this.http.post<any>('http://localhost:3000/getAstBase64', json);\n  }\n\n}\n","/* (ignored) */","/* (ignored) */","\nimport { Fila } from './Xml/Fila';\nimport { XmlResultado } from './Xml/XmlResultado';\nimport { SimbolsReport } from './Reportes/TablaSimbolos'\nimport Parser from '../build/Grammar/xmlA.js'\nimport { Observable } from 'rxjs';\n\n\n\n\nconst port = 3000;\n//const parserXpath = require('./Grammar/xpathA.js');\n\n\n\n\n\n\nexport function Analizar_XML(entrada: string) {\n\n  // aqui voy a vaciar antes que nada los nuevos simbolos\n  SimbolsReport.aux = \"\";\n  console.log(\"suu adentro papasito\")\n\n  const tree: XmlResultado = Parser.parse(entrada)\n  // const resXpath:any = parserXpath.parse(\"/negocio/unica | /negocio/videojuego\")\n  // console.log(\"Respuesta xpath:\")\n  //console.log(resXpath)\n  //console.log(\"\\nResultado de busqueda:\")\n  //console.log(tree.getAsTable().buscar(resXpath))\n\n\n  /**aqui se llenara el reporte HTML de la tabla de simbolos  */\n  /*tree.getAsTable().filas.forEach(fila => {\n    //console.log(fila)\n\n\n    SimbolsReport.aux += \"<td>\\n\" + fila.nombre + \"</td>\" + \"\\n\";\n\n    SimbolsReport.aux += \"<td>\\n\" + fila.tipo + \"</td>\" + \"\\n\";\n\n    SimbolsReport.aux += \"<td>\\n\" + fila.listaAmbito.join(\"-\") + \"</td>\" + \"\\n\";\n\n    SimbolsReport.aux += \"<td>\\n\" + fila.fila + \"</td>\" + \"\\n\";\n\n    SimbolsReport.aux += \"<td>\\n\" + fila.columna + \"</td>\" + \"\\n\";\n    SimbolsReport.aux += \"<td>\\n\" + fila.valor + \"</td>\" + \"\\n\";\n    SimbolsReport.aux += \"</tr>\" + \"\\n\";\n\n\n  });\n*/\n\n\n\n\n  /*  aqui termina el llenado de la tabla de simbolos **/\n\n\n\n\n\n  console.log(tree.getErroresSemanticos())\n  // console.log(Xpath)\n  //console.log(tree.getCstDotA());\n  var alv ={\n   cst:tree.getCstDotA(),\n   simbolo: tree.getAsTable().filas\n   \n\n  }\n  return alv\n\n}\n\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graficas_1 = require(\"../Graficas/Graficas\");\nconst Tabla_1 = require(\"./Tabla\");\nclass XmlResultado {\n    constructor(etiquitaInicio, etiquetasCuerpo) {\n        this.etiquitaInicio = etiquitaInicio;\n        this.etiquetasCuerpo = etiquetasCuerpo;\n    }\n    imprimir() {\n        let texto = \"\";\n        this.etiquetasCuerpo.forEach(etiqueta => {\n            texto += etiqueta.imprimir();\n        });\n        return texto;\n    }\n    getAsTable() {\n        let tabla = new Tabla_1.Tabla();\n        this.etiquetasCuerpo.forEach(etiqueta => {\n            etiqueta.getAsTable().filas.forEach(fila => {\n                tabla.addFila(fila);\n            });\n        });\n        return tabla;\n    }\n    getErroresSemanticos() {\n        let texto = \"\";\n        this.etiquetasCuerpo.forEach(etiqueta => {\n            texto += etiqueta.getErroresSemanticos();\n        });\n        return texto;\n    }\n    getCstDotA() {\n        let texto = \"\";\n        texto += \"dinetwork {\\n\";\n        texto += Graficas_1.Graficas.defNodo(0, \"XML\");\n        texto += Graficas_1.Graficas.getElement(1, \"TAG_CONFIGURACION\", 0);\n        texto += this.etiquitaInicio.getCstDotA(1);\n        if (this.etiquetasCuerpo.length > 0) {\n            let cont = 3;\n            for (let etiqueta of this.etiquetasCuerpo) {\n                if (cont - 3 != this.etiquetasCuerpo.length - 1) {\n                    texto += Graficas_1.Graficas.getElement(cont, \"LISTA_ETIQUETAS\", cont + 1);\n                    texto += etiqueta.getCstDotA(cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(cont, \"LISTA_ETIQUETAS\", 0);\n                    texto += etiqueta.getCstDotA(cont);\n                }\n                cont += 1;\n            }\n        }\n        texto += \"}\";\n        return texto;\n    }\n    getCstDotD() {\n        let texto = \"\";\n        texto += \"dinetwork{\\n\";\n        texto += Graficas_1.Graficas.defNodo(0, \"XML\");\n        texto += Graficas_1.Graficas.getElement(1, \"TAG_CONFIGURACION\", 0);\n        texto += this.etiquitaInicio.getCstDotA(1);\n        if (this.etiquetasCuerpo.length > 0) {\n            let cont = 3;\n            for (let etiqueta of this.etiquetasCuerpo) {\n                if (cont === 3) {\n                    texto += Graficas_1.Graficas.getElement(cont, \"LISTA_ETIQUETAS\", 0);\n                    texto += etiqueta.getCstDotD(cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(cont, \"LISTA_ETIQUETAS\", cont - 1);\n                    texto += etiqueta.getCstDotD(cont);\n                }\n                cont += 1;\n            }\n        }\n        texto += \"}\";\n        return texto;\n    }\n}\nexports.XmlResultado = XmlResultado;\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-arbol-ast',\n  templateUrl: './arbol-ast.component.html',\n  styleUrls: ['./arbol-ast.component.css']\n})\nexport class ArbolAstComponent implements OnInit {\n\n  @Input() arbolJson:any\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row justify-content-center tabla\">\n    <div class=\"col-md-8 tab\">\n        <ul class=\"nav nav-tabs justify-content-center\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#errores\">Arbol Ast</a>\n            </li>\n        </ul>\n    </div>\n    <img src=\"https://media.gettyimages.com/photos/artificial-ingelligence-cpu-empty-landscape-picture-id1132483126?s=2048x2048\">\n</div>\n\n\n<!-- <script src=\"https://d3js.org/d3.v3.min.js\"></script>\n<script src=\"https://vanya.jp.net/vtree/dist/vtree.js\"></script>\n<script>\n  window.onload = () => {\n    var json = `{\"mensaje\":1}`;\n    var vt = new VTree(astDiv);\n    var reader = new VTree.reader.Object();\n    var data = reader.read(JSON.parse(json));\n    vt.data(data).update();\n  };\n</script>\n<div id=\"astDiv\"></div> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabla-errores',\n  templateUrl: './tabla-errores.component.html',\n  styleUrls: ['./tabla-errores.component.css']\n})\nexport class TablaErroresComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row justify-content-center tabla\">\n    <div class=\"col-md-8 tab\">\n        <ul class=\"nav nav-tabs justify-content-center\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#errores\">Tabla de Errores</a>\n            </li>\n        </ul>\n        <div class=\"tab-pane\" id=\"errores\">\n            <div class=\"col-md-12\">\n                <br>\n                <div style=\"width: auto; height: auto;\">\n                    <table class=\"table table-danger table-hover\">\n                        <thead>\n                            <tr>\n                                <td>TIPO</td>\n                                <td>ERROR</td>\n                                <td>FILA</td>\n                                <td>COLUMNA</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1</td>\n                                <td>2</td>\n                                <td>3</td>\n                                <td>4</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <br>\n            </div>\n        </div>\n    </div>\n</div>","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graficas_1 = require(\"../Graficas/Graficas\");\nconst Fila_1 = require(\"./Fila\");\nconst Tabla_1 = require(\"./Tabla\");\nconst Tipos_1 = require(\"./Tipos\");\nclass EtiquetaDoble {\n    constructor(nombreTagAbre, nombreTagCierre, listaAtributos, cadenaValores, listaHijos, linea, columna, idSent) {\n        this.padre = null;\n        this.nombreTagAbre = nombreTagAbre;\n        this.nombreTagCierre = nombreTagCierre;\n        this.listaAtributos = listaAtributos;\n        this.tineHijos = listaHijos.length > 0;\n        this.cadenaValores = (listaHijos.length == 0) ? cadenaValores : \"\";\n        this.listaHijos = (listaHijos.length > 0) ? listaHijos : [];\n        this.linea = linea;\n        this.columna = columna;\n        this.idSent = idSent;\n        this.listaAtributos.forEach(atributo => {\n            atributo.etiquetaContendora = this;\n        });\n        this.listaHijos.forEach(hijo => {\n            hijo.padre = this;\n        });\n    }\n    imprimir() {\n        let texto = \"\";\n        texto += \"<\" + this.nombreTagAbre;\n        this.listaAtributos.forEach(atributo => {\n            texto += \" \" + atributo.imprimir();\n        });\n        texto += \">\";\n        if (this.listaHijos.length > 0) {\n            texto += \"\\n\";\n        }\n        texto += this.cadenaValores;\n        this.listaHijos.forEach(hijo => {\n            texto += hijo.imprimir();\n        });\n        texto += \"</\" + this.nombreTagCierre + \"> \\n\";\n        return texto;\n    }\n    getName() {\n        return this.nombreTagAbre;\n    }\n    getAmbito() {\n        let listaAmbito = [];\n        for (let etiqueta = this.padre; etiqueta != null; etiqueta = etiqueta.padre) {\n            listaAmbito.push(etiqueta.getName());\n        }\n        listaAmbito.push(\"GLOBAL\");\n        return listaAmbito;\n    }\n    getAsTable() {\n        let tabla = new Tabla_1.Tabla();\n        tabla.addFila(new Fila_1.Fila(this.nombreTagAbre, Tipos_1.Tipos.ETIQUETA_DOBLE, this.getAmbito(), this.linea, this.columna, this.imprimir()));\n        this.listaAtributos.forEach(atributo => {\n            tabla.addFila(atributo.getAsRowTable());\n        });\n        this.listaHijos.forEach(etiqueta => {\n            etiqueta.getAsTable().filas.forEach(fila => {\n                tabla.addFila(fila);\n            });\n        });\n        if (!this.tineHijos) {\n            if (this.cadenaValores != \"\") {\n                tabla.addFila(new Fila_1.Fila(\"-\", Tipos_1.Tipos.VALOR, [this.getName()].concat(this.getAmbito()), this.linea, this.columna + this.nombreTagAbre.length + 2, this.cadenaValores));\n            }\n        }\n        return tabla;\n    }\n    getErroresSemanticos() {\n        let texto = \"\";\n        if (this.nombreTagAbre != this.nombreTagCierre) {\n            texto += `Error(Linea: ${this.linea}, Columna: ${this.columna}): El nombre del tag de apertura no es igual al de cierre.\\n`;\n        }\n        this.listaAtributos.forEach(atributo => {\n            let apariciones = 0;\n            for (let atr2 of this.listaAtributos) {\n                if (atributo.nombre == atr2.nombre) {\n                    apariciones += 1;\n                }\n                if (apariciones > 1) {\n                    texto += `Error(Linea: ${atributo.linea}, Columna: ${atributo.columna}): El atributo '${atributo.nombre}' se encuentra repetido.\\n`;\n                    break;\n                }\n            }\n        });\n        this.listaHijos.forEach(hijo => {\n            texto += hijo.getErroresSemanticos();\n        });\n        return texto;\n    }\n    getCstDotA(idPadre) {\n        let texto = \"\";\n        texto += Graficas_1.Graficas.getElement(this.idSent, \"ETIQUETA\", idPadre);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 1, \"TAG_APERTURA\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 2, \"AbreTagApertura\", this.idSent + 1);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 3, \"<\" + this.nombreTagAbre, this.idSent + 2);\n        if (this.listaAtributos.length > 0) {\n            let cont = 4;\n            for (let atributo of this.listaAtributos) {\n                if (cont - 4 != this.listaAtributos.length - 1) {\n                    texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + cont + 1);\n                    texto += atributo.getCstDotA(this.idSent + cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + 1);\n                    texto += atributo.getCstDotA(this.idSent + cont);\n                }\n                cont += 1;\n            }\n        }\n        let idSent2 = this.idSent + 4 + this.listaAtributos.length;\n        texto += Graficas_1.Graficas.getElement(idSent2 + 1, \"CierreTagApertura\", this.idSent + 1);\n        texto += Graficas_1.Graficas.getElement(idSent2 + 2, \">\", idSent2 + 1);\n        if (this.listaHijos.length > 0) {\n            let cont = 3;\n            for (let hijo of this.listaHijos) {\n                if (cont - 3 != this.listaHijos.length - 1) {\n                    texto += Graficas_1.Graficas.getElement(idSent2 + cont, \"LISTA_ETIQUETAS\", idSent2 + cont + 1);\n                    texto += hijo.getCstDotA(idSent2 + cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(idSent2 + cont, \"LISTA_ETIQUETAS\", this.idSent);\n                    texto += hijo.getCstDotA(idSent2 + cont);\n                }\n                cont += 1;\n            }\n        }\n        else if (this.cadenaValores != \"\") {\n            texto += Graficas_1.Graficas.getElement(idSent2 + 3, \"CadenaValores\", this.idSent);\n            texto += Graficas_1.Graficas.getElement(idSent2 + 4, this.cadenaValores, idSent2 + 3);\n        }\n        let idSent3 = idSent2 + 4 + this.listaHijos.length;\n        texto += Graficas_1.Graficas.getElement(idSent3 + 1, \"TAG_CIERRE\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 2, \"AbreTagCierre\", idSent3 + 1);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 3, \"</\" + this.nombreTagCierre, idSent3 + 2);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 4, \"CierreTagCierre\", idSent3 + 1);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 5, \">\", idSent3 + 4);\n        return texto;\n    }\n    getCstDotD(idPadre) {\n        let texto = \"\";\n        texto += Graficas_1.Graficas.getElement(this.idSent, \"ETIQUETA\", idPadre);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 1, \"TAG_APERTURA\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 2, \"AbreTagApertura\", this.idSent + 1);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 3, \"<\" + this.nombreTagAbre, this.idSent + 2);\n        if (this.listaAtributos.length > 0) {\n            let cont = 4;\n            for (let atributo of this.listaAtributos) {\n                if (cont === 4) {\n                    texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + 1);\n                    texto += atributo.getCstDotA(this.idSent + cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + cont - 1);\n                    texto += atributo.getCstDotA(this.idSent + cont);\n                }\n                cont += 1;\n            }\n        }\n        let idSent2 = this.idSent + 4 + this.listaAtributos.length;\n        texto += Graficas_1.Graficas.getElement(idSent2 + 1, \"CierreTagApertura\", this.idSent + 1);\n        texto += Graficas_1.Graficas.getElement(idSent2 + 2, \">\", idSent2 + 1);\n        if (this.listaHijos.length > 0) {\n            let cont = 3;\n            for (let hijo of this.listaHijos) {\n                if (cont === 3) {\n                    texto += Graficas_1.Graficas.getElement(idSent2 + cont, \"LISTA_ETIQUETAS\", this.idSent);\n                    texto += hijo.getCstDotD(idSent2 + cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(idSent2 + cont, \"LISTA_ETIQUETAS\", idSent2 + cont - 1);\n                    texto += hijo.getCstDotD(idSent2 + cont);\n                }\n                cont += 1;\n            }\n        }\n        else if (this.cadenaValores != \"\") {\n            texto += Graficas_1.Graficas.getElement(idSent2 + 3, \"CadenaValores\", this.idSent);\n            texto += Graficas_1.Graficas.getElement(idSent2 + 4, this.cadenaValores, idSent2 + 3);\n        }\n        let idSent3 = idSent2 + 4 + this.listaHijos.length;\n        texto += Graficas_1.Graficas.getElement(idSent3 + 1, \"TAG_CIERRE\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 2, \"AbreTagCierre\", idSent3 + 1);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 3, \"</\" + this.nombreTagCierre, idSent3 + 2);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 4, \"CierreTagCierre\", idSent3 + 1);\n        texto += Graficas_1.Graficas.getElement(idSent3 + 5, \">\", idSent3 + 4);\n        return texto;\n    }\n}\nexports.EtiquetaDoble = EtiquetaDoble;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graficas_1 = require(\"../Graficas/Graficas\");\nconst Fila_1 = require(\"./Fila\");\nconst Tipos_1 = require(\"./Tipos\");\nclass Atributo {\n    constructor(nombre, valor, linea, columna, idSent) {\n        this.etiquetaContendora = null;\n        this.nombre = nombre;\n        this.valor = valor;\n        this.linea = linea;\n        this.columna = columna;\n        this.idSent = idSent;\n    }\n    getAmbito() {\n        let listaAmbito = [];\n        for (let etiqueta = this.etiquetaContendora; etiqueta != null; etiqueta = etiqueta.padre) {\n            listaAmbito.push(etiqueta.getName());\n        }\n        listaAmbito.push(\"GLOBAL\");\n        return listaAmbito;\n    }\n    getAsRowTable() {\n        return (new Fila_1.Fila(this.nombre, Tipos_1.Tipos.ATRIBUTO, this.getAmbito(), this.linea, this.columna, this.imprimir()));\n    }\n    imprimir() {\n        let texto = \"\";\n        texto = this.nombre + \"=\" + this.valor;\n        return texto;\n    }\n    getCstDotA(idPadre) {\n        let texto = \"\";\n        texto += Graficas_1.Graficas.getElement(this.idSent, \"ATRIBUTO\", idPadre);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 1, \"NombreAtributo\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 2, this.nombre, this.idSent + 1);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 4, \"IgualAtributo\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 5, \"=\", this.idSent + 4);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 6, \"ValorAtributo\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 7, this.valor.split(\"\\\"\").join(\"\\\"\\\"  \"), this.idSent + 6);\n        return texto;\n    }\n}\nexports.Atributo = Atributo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TipoSeleccion_1 = require(\"../Xpath/TipoSeleccion\");\nconst TipoVal_1 = require(\"../Xpath/TipoVal\");\nfunction sonAmbitosIguales(ambito1, ambito2) {\n    if (ambito1.length === ambito2.length) {\n        for (let i = 0; i < ambito1.length; i++) {\n            if (ambito1[i] != ambito2[i]) {\n                return false;\n            }\n        }\n    }\n    else {\n        return false;\n    }\n    return true;\n}\nfunction esSimboloIgual(elemBusqueda, fila) {\n    if (elemBusqueda.nombre == fila.nombre &&\n        sonAmbitosIguales(elemBusqueda.listaAmbito, fila.listaAmbito)) {\n        return true;\n    }\n    return false;\n}\nclass Tabla {\n    constructor() {\n        this.filas = [];\n    }\n    addFila(fila) {\n        this.filas.push(fila);\n    }\n    buscar(resXpath, elemBusqueda = {\n        nombre: \"\",\n        tipo: \"\",\n        listaAmbito: ['GLOBAL']\n    }) {\n        let texto = \"\";\n        for (let set of resXpath) {\n            if (set.tipo === TipoSeleccion_1.TipoSeleccion.ACCESO_NODO_RAIZ && set.predicado == null) {\n                for (let fila of this.filas) {\n                    if (fila.nombre === set.id && fila.listaAmbito[0] === 'GLOBAL') {\n                        texto += fila.valor;\n                    }\n                }\n            }\n            if (set.tipo === TipoSeleccion_1.TipoSeleccion.SELECT_NODOS_FROM_NODO) {\n                elemBusqueda.nombre = set.id;\n                if (set.selector === \"//\" && set.predicado == null && set.next == null) {\n                    for (let fila of this.filas) {\n                        if (fila.nombre == elemBusqueda.nombre) {\n                            if (!texto.includes(fila.valor)) {\n                                return fila.valor;\n                            }\n                        }\n                    }\n                }\n                if (set.predicado != null) {\n                    let opBinaria = set.predicado;\n                    let res = opBinaria.ejecutar();\n                    if (res.tipo === TipoVal_1.TipoVal.ENTERO) {\n                        let cont = 0;\n                        for (let fila of this.filas) {\n                            if (fila.nombre == elemBusqueda.nombre) {\n                                if (!texto.includes(fila.valor) && cont === res.valor - 1) {\n                                    return fila.valor;\n                                }\n                                cont += 1;\n                            }\n                        }\n                    }\n                }\n                if (set.next === null) {\n                    for (let fila of this.filas) {\n                        if (esSimboloIgual(elemBusqueda, fila)) {\n                            texto += fila.valor;\n                        }\n                    }\n                }\n                if (set.next != null) {\n                    elemBusqueda.listaAmbito.unshift(set.id);\n                    texto += this.buscar([set.next], elemBusqueda);\n                }\n            }\n            elemBusqueda = {\n                nombre: \"\",\n                tipo: \"\",\n                listaAmbito: ['GLOBAL']\n            };\n            texto += \"\\n\";\n        }\n        return texto;\n    }\n}\nexports.Tabla = Tabla;\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlA = (function () {\n    var o = function (k, v, o, l) { for (o = o || {}, l = k.length; l--; o[k[l]] = v)\n        ; return o; }, $V0 = [1, 8], $V1 = [1, 14], $V2 = [6, 12, 15], $V3 = [1, 18], $V4 = [14, 17, 19, 21], $V5 = [10, 12, 15];\n    var parser = { trace: function trace() { },\n        yy: {},\n        symbols_: { \"error\": 2, \"XML\": 3, \"TAG_CONFIGURACION\": 4, \"LISTA_ETIQUETAS\": 5, \"EOF\": 6, \"ETIQUETA\": 7, \"TAG_APERTURA\": 8, \"TAG_CIERRE\": 9, \"CadenaValores\": 10, \"TAG_UNICO\": 11, \"AbreTagApertura\": 12, \"LISTA_ATRIBUTOS\": 13, \"CierreTagApertura\": 14, \"AbreTagCierre\": 15, \"CierreTagCierre\": 16, \"CierreTagUnico\": 17, \"AbreTagConf\": 18, \"CierreTagConf\": 19, \"ATRIBUTO\": 20, \"NombreAtributo\": 21, \"IgualAtributo\": 22, \"ValorAtributo\": 23, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 6: \"EOF\", 10: \"CadenaValores\", 12: \"AbreTagApertura\", 14: \"CierreTagApertura\", 15: \"AbreTagCierre\", 16: \"CierreTagCierre\", 17: \"CierreTagUnico\", 18: \"AbreTagConf\", 19: \"CierreTagConf\", 21: \"NombreAtributo\", 22: \"IgualAtributo\", 23: \"ValorAtributo\" },\n        productions_: [0, [3, 3], [3, 2], [5, 2], [5, 1], [7, 3], [7, 3], [7, 2], [7, 1], [8, 3], [8, 2], [9, 2], [11, 3], [11, 2], [4, 3], [13, 2], [13, 1], [20, 3]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n            /* this == yyval */\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    this.$ = new XmlResultado($$[$0 - 2], $$[$0 - 1]);\n                    return this.$;\n                    break;\n                case 2:\n                    this.$ = new XmlResultado(null, $$[$0]);\n                    return this.$;\n                    break;\n                case 3:\n                case 15:\n                    $$[$0 - 1].push($$[$0]);\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 4:\n                case 16:\n                    this.$ = [$$[$0]];\n                    break;\n                case 5:\n                    this.$ = new EtiquetaDoble($$[$0 - 2].nombreTagApertura, $$[$0], $$[$0 - 2].listaAtributos, '', $$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, getId());\n                    break;\n                case 6:\n                    this.$ = new EtiquetaDoble($$[$0 - 2].nombreTagApertura, $$[$0], $$[$0 - 2].listaAtributos, $$[$0 - 1], [], _$[$0 - 2].first_line, _$[$0 - 2].first_column, getId());\n                    break;\n                case 7:\n                    this.$ = new EtiquetaDoble($$[$0 - 1].nombreTagApertura, $$[$0], $$[$0 - 1].listaAtributos, '', [], _$[$0 - 1].first_line, _$[$0 - 1].first_column, getId());\n                    break;\n                case 8:\n                    this.$ = $$[$0];\n                    break;\n                case 9:\n                    this.$ = {\n                        nombreTagApertura: formatTagName($$[$0 - 2]),\n                        listaAtributos: $$[$0 - 1]\n                    };\n                    break;\n                case 10:\n                    this.$ = {\n                        nombreTagApertura: formatTagName($$[$0 - 1]),\n                        listaAtributos: []\n                    };\n                    break;\n                case 11:\n                    this.$ = formatTagName(formatTagName($$[$0 - 1]));\n                    break;\n                case 12:\n                    this.$ = new EtiquetaSimple(formatTagName($$[$0 - 2]), $$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, getId());\n                    break;\n                case 13:\n                    this.$ = new EtiquetaSimple(formatTagName($$[$0 - 1]), [], _$[$0 - 1].first_line, _$[$0 - 1].first_column, getId());\n                    break;\n                case 14:\n                    this.$ = new EtiquetaInicio($$[$0 - 1], _$[$0 - 2].first_line, _$[$0 - 2].first_column, getId());\n                    break;\n                case 17:\n                    this.$ = new Atributo($$[$0 - 2], $$[$0], _$[$0 - 2].first_line, _$[$0 - 2].first_column, getId());\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 5: 3, 7: 5, 8: 6, 11: 7, 12: $V0, 18: [1, 4] }, { 1: [3] }, { 5: 9, 7: 5, 8: 6, 11: 7, 12: $V0 }, { 6: [1, 10], 7: 11, 8: 6, 11: 7, 12: $V0 }, { 13: 12, 20: 13, 21: $V1 }, o($V2, [2, 4]), { 5: 15, 7: 5, 8: 6, 9: 17, 10: [1, 16], 11: 7, 12: $V0, 15: $V3 }, o($V2, [2, 8]), { 13: 19, 14: [1, 20], 17: [1, 21], 20: 13, 21: $V1 }, { 6: [1, 22], 7: 11, 8: 6, 11: 7, 12: $V0 }, { 1: [2, 2] }, o($V2, [2, 3]), { 19: [1, 23], 20: 24, 21: $V1 }, o($V4, [2, 16]), { 22: [1, 25] }, { 7: 11, 8: 6, 9: 26, 11: 7, 12: $V0, 15: $V3 }, { 9: 27, 15: $V3 }, o($V2, [2, 7]), { 16: [1, 28] }, { 14: [1, 29], 17: [1, 30], 20: 24, 21: $V1 }, o($V5, [2, 10]), o($V2, [2, 13]), { 1: [2, 1] }, { 12: [2, 14] }, o($V4, [2, 15]), { 23: [1, 31] }, o($V2, [2, 5]), o($V2, [2, 6]), o($V2, [2, 11]), o($V5, [2, 9]), o($V2, [2, 12]), o($V4, [2, 17])],\n        defaultActions: { 10: [2, 2], 22: [2, 1], 23: [2, 14] },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            }\n            else {\n                var error = new Error(str);\n                error.hash = hash;\n                throw error;\n            }\n        },\n        parse: function parse(input) {\n            var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            }\n            else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function () {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                }\n                else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    }\n                    else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        }\n                        else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [\n                                lstack[lstack.length - (len || 1)].range[0],\n                                lstack[lstack.length - 1].range[1]\n                            ];\n                        }\n                        r = this.performAction.apply(yyval, [\n                            yytext,\n                            yyleng,\n                            yylineno,\n                            sharedState.yy,\n                            action[1],\n                            vstack,\n                            lstack\n                        ].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n    const { EtiquetaDoble } = require('../Xml/EtiquetaDoble');\n    const { EtiquetaSimple } = require('../Xml/EtiquetaSimple');\n    const { EtiquetaInicio } = require('../Xml/EtiquetaInicio');\n    const { Atributo } = require('../Xml/Atributo');\n    const { XmlResultado } = require('../Xml/XmlResultado');\n    let idSent = 1;\n    function getId() {\n        idSent += 100;\n        return idSent;\n    }\n    function formatTagName(AbreTagApertura) {\n        return AbreTagApertura.substring(1, AbreTagApertura.length);\n    }\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = ({\n            EOF: 1,\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                }\n                else {\n                    throw new Error(str);\n                }\n            },\n            // resets the lexer, sets new input\n            setInput: function (input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n            // consumes and returns one char from the input\n            input: function () {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                }\n                else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            // unshifts one char (or a string) into the input\n            unput: function (ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ?\n                        (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                            + oldLines[oldLines.length - lines.length].length - lines[0].length :\n                        this.yylloc.first_column - len\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n            // When called from action, caches matched text and appends it on next action\n            more: function () {\n                this._more = true;\n                return this;\n            },\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function () {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                }\n                else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n            // retain first n characters of the match\n            less: function (n) {\n                this.unput(this.match.slice(n));\n            },\n            // displays already matched input, i.e. for error messages\n            pastInput: function () {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function () {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function () {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function (match, indexed_rule) {\n                var token, lines, backup;\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ?\n                        lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                        this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                }\n                else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n            // return next match in input\n            next: function () {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            }\n                            else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            }\n                            else {\n                                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                return false;\n                            }\n                        }\n                        else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                }\n                else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                }\n                else {\n                    return this.lex();\n                }\n            },\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                }\n                else {\n                    return this.conditionStack[0];\n                }\n            },\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                }\n                else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                }\n                else {\n                    return \"INITIAL\";\n                }\n            },\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: { \"case-insensitive\": true },\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        this.begin(\"Comentario\");\n                        break;\n                    case 1:\n                        break;\n                    case 2:\n                        break;\n                    case 3:\n                        this.popState();\n                        break;\n                    case 4:\n                        break;\n                    case 5:\n                        this.begin(\"TagApertura\");\n                        return 18;\n                        break;\n                    case 6:\n                        break;\n                    case 7:\n                        return 21;\n                        break;\n                    case 8:\n                        return 22;\n                        break;\n                    case 9:\n                        return 23;\n                        break;\n                    case 10:\n                        this.popState();\n                        return 19;\n                        break;\n                    case 11:\n                        this.begin(\"TagApertura\");\n                        return 12;\n                        break;\n                    case 12:\n                        break;\n                    case 13:\n                        return 21;\n                        break;\n                    case 14:\n                        return 22;\n                        break;\n                    case 15:\n                        return 23;\n                        break;\n                    case 16:\n                        this.popState();\n                        return 14;\n                        break;\n                    case 17:\n                        this.popState();\n                        return 17;\n                        break;\n                    case 18:\n                        this.begin(\"TagCierre\");\n                        return 15;\n                        break;\n                    case 19:\n                        this.popState();\n                        return 16;\n                        break;\n                    case 20:\n                        break;\n                    case 21:\n                        return 10;\n                        break;\n                    case 22:\n                        return 6;\n                        break;\n                    case 23:\n                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\n                        break;\n                }\n            },\n            rules: [/^(?:<!--)/i, /^(?:[\\r\\t]+)/i, /^(?:\\n)/i, /^(?:-->)/i, /^(?:[^\"-->\"]+)/i, /^(?:<\\?xml\\b)/i, /^(?:[\\s\\r\\t\\n]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_]*)/i, /^(?:=)/i, /^(?:\"[^\\\"\\n]*\")/i, /^(?:\\?>)/i, /^(?:<[a-zA-Z_][a-zA-Z0-9_]*)/i, /^(?:[\\s\\r\\t\\n]+)/i, /^(?:[a-zA-Z_][a-zA-Z0-9_]*)/i, /^(?:=)/i, /^(?:\"[^\\\"\\n]*\")/i, /^(?:>)/i, /^(?:\\/>)/i, /^(?:<\\/[a-zA-Z_][a-zA-Z0-9_]*)/i, /^(?:>)/i, /^(?:[\\s\\r\\t\\n]+)/i, /^(?:[^<]+)/i, /^(?:$)/i, /^(?:.)/i],\n            conditions: { \"TagCierre\": { \"rules\": [19], \"inclusive\": false }, \"TagApertura\": { \"rules\": [6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], \"inclusive\": false }, \"Comentario\": { \"rules\": [1, 2, 3, 4], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 5, 11, 18, 20, 21, 22, 23], \"inclusive\": true } }\n        });\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;\n    parser.Parser = Parser;\n    return new Parser;\n})();\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = xmlA;\n    exports.Parser = xmlA.Parser;\n    exports.parse = function () { return xmlA.parse.apply(xmlA, arguments); };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TipoSeleccion;\n(function (TipoSeleccion) {\n    TipoSeleccion[\"ACCESO_NODO_RAIZ\"] = \"ACCESO_NODO_RAIZ\";\n    TipoSeleccion[\"SELECT_NODOS_FROM_NODO\"] = \"SELECT_NODOS_FROM_NODO\";\n})(TipoSeleccion = exports.TipoSeleccion || (exports.TipoSeleccion = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Tipos;\n(function (Tipos) {\n    Tipos[\"ETIQUETA_DOBLE\"] = \"ETIQUETA_DOBLE\";\n    Tipos[\"ETIQUETA_SIMPLE\"] = \"ETIQUETA_SIMPLE\";\n    Tipos[\"ETIQUETA_UNICA\"] = \"ETIQUETA_UNICA\";\n    Tipos[\"ATRIBUTO\"] = \"ATRIBUTO\";\n    Tipos[\"VALOR\"] = \"VALOR\";\n})(Tipos = exports.Tipos || (exports.Tipos = {}));\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<router-outlet></router-outlet>","\nexport class SimbolsReport {\n    Lista: any = []\n    help: string\n    public static aux: string = \"\";\n\n\n\n    public static Llenado_tabla() {\n\n\n\n\n    }\n    public static REPORTE() {\n        console.log(\"suuuuu adentro\")\n        var grafo = \"\"\n        grafo += \"<html ><head><title>Reporte </title>    </head>\"\n        grafo += \"<body class=\\\"MIfondo\\\">\\n\";\n        grafo += \"<div align=\\\"center\\\"  class=\\\"MIfondo\\\"> \\n\";\n        grafo += \"<h1 class = \\\"tituloTb\\\">TABLA DE SIMBOLOS </h1>\\n\";\n        grafo += \"<table border=\\\"2\\\" align=\\\"center\\\" class=\\\"tabl\\\">\\n\";\n        grafo += \"<tr>\\n\";\n        grafo += \"<th>Nombre</th>  <th>Tipo</th><th>Ambito</th><th>Fila</th><th>Columna</th><th>Valor</th>\\n\";\n        grafo += \"</tr>\\n\";\n        grafo += SimbolsReport.aux\n        grafo += \"</table>\\n\";\n        grafo += \"</div>\\n\";\n        grafo += \"</body>\\n\";\n        grafo += \"</html>\\n\";\n  \n\n\n\n    }\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Fila_1 = require(\"./Fila\");\nconst Tipos_1 = require(\"./Tipos\");\nconst Tabla_1 = require(\"./Tabla\");\nconst Graficas_1 = require(\"../Graficas/Graficas\");\nclass EtiquetaSimple {\n    constructor(nombreTag, listaAtributos, linea, columna, idSent) {\n        this.nombreTag = nombreTag;\n        this.padre = null;\n        this.listaAtributos = listaAtributos;\n        this.linea = linea;\n        this.columna = columna;\n        this.idSent = idSent;\n        this.listaAtributos.forEach(atributo => {\n            atributo.etiquetaContendora = this;\n        });\n    }\n    getName() {\n        return this.nombreTag;\n    }\n    getAmbito() {\n        let listaAmbito = [];\n        for (let etiqueta = this.padre; etiqueta != null; etiqueta = etiqueta.padre) {\n            listaAmbito.push(etiqueta.getName());\n        }\n        listaAmbito.push(\"GLOBAL\");\n        return listaAmbito;\n    }\n    imprimir() {\n        let texto = \"\";\n        texto += \"<\" + this.nombreTag;\n        this.listaAtributos.forEach(atributo => {\n            texto += \" \" + atributo.imprimir();\n        });\n        texto += \"/> \\n\";\n        return texto;\n    }\n    getAsTable() {\n        let tabla = new Tabla_1.Tabla();\n        tabla.addFila(new Fila_1.Fila(this.getName(), Tipos_1.Tipos.ETIQUETA_SIMPLE, this.getAmbito(), this.linea, this.columna, this.imprimir()));\n        this.listaAtributos.forEach(atributo => {\n            tabla.addFila(atributo.getAsRowTable());\n        });\n        return tabla;\n    }\n    getErroresSemanticos() {\n        let texto = \"\";\n        this.listaAtributos.forEach(atributo => {\n            let apariciones = 0;\n            for (let atr2 of this.listaAtributos) {\n                if (atributo.nombre == atr2.nombre) {\n                    apariciones += 1;\n                }\n                if (apariciones > 1) {\n                    texto += `Error(Linea: ${atributo.linea}, Columna: ${atributo.columna}): El atributo '${atributo.nombre}' se encuentra repetido.\\n`;\n                    break;\n                }\n            }\n        });\n        return texto;\n    }\n    getCstDotA(idPadre) {\n        let texto = \"\";\n        texto += Graficas_1.Graficas.getElement(this.idSent, \"TAG_UNICO\", idPadre);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 1, \"AbreTagCierre\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 2, \"<\" + this.nombreTag, this.idSent + 1);\n        if (this.listaAtributos.length > 0) {\n            let cont = 3;\n            for (let atributo of this.listaAtributos) {\n                if (cont - 3 != this.listaAtributos.length - 1) {\n                    texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + cont + 1);\n                    texto += atributo.getCstDotA(this.idSent + cont);\n                }\n                else {\n                    texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent);\n                    texto += atributo.getCstDotA(this.idSent + cont);\n                }\n                cont += 1;\n            }\n        }\n        texto += Graficas_1.Graficas.getElement(this.idSent + 3 + this.listaAtributos.length, \"CierreTagCierre\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 4 + this.listaAtributos.length, \"\\\\>\", this.idSent + 3 + this.listaAtributos.length);\n        return texto;\n    }\n    getCstDotD(idPadre) {\n        let texto = \"\";\n        texto += Graficas_1.Graficas.getElement(this.idSent, \"TAG_UNICO\", idPadre);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 1, \"AbreTagCierre\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 2, \"<\" + this.nombreTag, this.idSent + 1);\n        if (this.listaAtributos.length > 0) {\n            let cont = 3;\n            for (let atributo of this.listaAtributos) {\n                let cont = 3;\n                for (let atributo of this.listaAtributos) {\n                    if (cont === 3) {\n                        texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + 1);\n                        texto += atributo.getCstDotA(this.idSent + cont);\n                    }\n                    else {\n                        texto += Graficas_1.Graficas.getElement(this.idSent + cont, \"LISTA_ATRIBUTOS\", this.idSent + cont - 1);\n                        texto += atributo.getCstDotA(this.idSent + cont);\n                    }\n                    cont += 1;\n                }\n            }\n        }\n        texto += Graficas_1.Graficas.getElement(this.idSent + 3 + this.listaAtributos.length, \"CierreTagCierre\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 4 + this.listaAtributos.length, \"\\\\>\", this.idSent + 3 + this.listaAtributos.length);\n        return texto;\n    }\n}\nexports.EtiquetaSimple = EtiquetaSimple;\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { CompiladorService } from 'src/app/services/compilador.service'\r\nimport { saveAs } from 'file-saver'\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as vis from \"vis\";\r\n//importamos para el editor\r\nimport { filter, take } from 'rxjs/operators';\r\nimport {\r\n  MonacoEditorComponent,\r\n  MonacoEditorConstructionOptions,\r\n  MonacoEditorLoaderService,\r\n  MonacoStandaloneCodeEditor\r\n} from '@materia-ui/ngx-monaco-editor';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-editor',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: ['./editor.component.css']\r\n})\r\nexport class EditorComponent implements OnInit {\r\n  nombreArchivo = \"Choose file\"\r\n  archivo: any\r\n  reporteSelccionado: string = \"\"\r\n\r\n  textoEditores: string[] = [\"\"]\r\n  indiceEditorActual = 0\r\n  console: string = \"\";\r\n  xpath: string = \"\";\r\n  astJson: any\r\n\r\n  tablaSimbolos: any\r\n  astBase64: any\r\n\r\n  @ViewChild(MonacoEditorComponent, { static: false })\r\n  monacoComponent: MonacoEditorComponent = new MonacoEditorComponent(this.monacoLoaderService);\r\n  editorOptions: MonacoEditorConstructionOptions = {\r\n    theme: 'myCustomTheme',\r\n    language: '',\r\n    roundedSelection: true,\r\n    autoIndent: \"full\"\r\n  };\r\n\r\n  consoleOptions: MonacoEditorConstructionOptions = {\r\n    theme: 'myCustomTheme',\r\n    language: 'XML',\r\n    roundedSelection: true,\r\n    autoIndent: \"full\",\r\n    readOnly: true\r\n  };\r\n  XpathOptions: MonacoEditorConstructionOptions = {\r\n    theme: 'myCustomTheme',\r\n    language: '',\r\n    roundedSelection: true,\r\n    autoIndent: \"full\",\r\n    readOnly: true\r\n  };\r\n  constructor(private sanitizer: DomSanitizer, private monacoLoaderService: MonacoEditorLoaderService,\r\n    private compiladorService: CompiladorService) {\r\n    this.monacoLoaderService.isMonacoLoaded$\r\n      .pipe(\r\n        filter(isLoaded => isLoaded),\r\n        take(1)\r\n      )\r\n      .subscribe(() => {\r\n        monaco.editor.defineTheme('myCustomTheme', {\r\n          base: 'vs-dark', // can also be vs or hc-black\r\n          inherit: true, // can also be false to completely replace the builtin rules\r\n          rules: [\r\n            {\r\n              token: 'comment',\r\n              foreground: 'ffa500',\r\n              fontStyle: 'italic underline'\r\n            },\r\n            { token: 'comment.js', foreground: '008800', fontStyle: 'bold' },\r\n            { token: 'comment.css', foreground: '0000ff' } // will inherit fontStyle from `comment` above\r\n          ],\r\n          colors: {}\r\n        });\r\n      });\r\n  }\r\n\r\n  editorInit(editor: MonacoStandaloneCodeEditor) {\r\n    editor.setSelection({\r\n      startLineNumber: 1,\r\n      startColumn: 1,\r\n      endColumn: 500,\r\n      endLineNumber: 3\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  compilar() {\r\n    this.console = \"\"\r\n\r\n    this.xpath = \"\"\r\n    this.astJson = []\r\n    this.tablaSimbolos = this.compiladorService.analizar(this.textoEditores[this.indiceEditorActual]).simbolo\r\n   // this.compiladorService.analizar(this.textoEditores[this.indiceEditorActual])\r\n   // viz(\"string en dot\")\r\n   // format: 'png-image-element'\r\n    /*   this.console = res.consola\r\n      this.astJson = res.arbol\r\n      this.tablaSimbolos = res.tablaSimbolos\r\n      this.astBase64 = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image;base64, ${res.astBase64}`)\r\n    */\r\n    \r\n\r\n  this.prueba(this.compiladorService.analizar(this.textoEditores[this.indiceEditorActual]).cst);\r\n\r\n  }\r\n\r\n  seleccionarArchivo(event: any) {\r\n    this.nombreArchivo = event.target.files[0].name\r\n    this.archivo = event.target.files[0]\r\n  }\r\n  prueba (grafo:string){\r\n    console.log(\"grafo0000000\"+grafo)\r\n\r\n    const container = document.getElementById(\"app\");\r\n    // provide data in the DOT language\r\n    var DOTstring = grafo;\r\n    var parsedData = vis.network.convertDot(DOTstring);\r\n    var options = parsedData.options;\r\n    options[\"physics\"] = {\r\n      enabled: false\r\n    };\r\n    \r\n    options[\"layout\"] = {\r\n      improvedLayout: true,\r\n      hierarchical: {\r\n        enabled: true,\r\n        levelSeparation: 150,\r\n        treeSpacing: 35,\r\n        blockShifting: true,\r\n        edgeMinimization: true,\r\n        parentCentralization: true,\r\n        direction: \"UD\",\r\n        sortMethod: \"directed\"\r\n      },\r\n      font: {\r\n          size: 15,\r\n          color: 'gray'\r\n      },\r\n      borderWidth: 2\r\n    };\r\n    \r\n    \r\n    \r\n    var network = new vis.Network(container, parsedData, options);\r\n    \r\n    network.on(\"stabilizationIterationsDone\", function () {\r\n      network.setOptions({ physics: false });\r\n    });\r\n  \r\n  \r\n  \r\n  }\r\n\r\n  cargarArchivo() {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const text = reader.result!.toString().trim();\r\n      this.textoEditores[this.indiceEditorActual] = text\r\n    }\r\n    reader.readAsText(this.archivo);\r\n  }\r\n\r\n  agregarTab() {\r\n    this.textoEditores.push(\"\")\r\n    this.indiceEditorActual = this.textoEditores.length - 1\r\n  }\r\n\r\n  eliminarEditor(i: number) {\r\n    if (i != 0) {\r\n      this.textoEditores.splice(i, 1)\r\n      this.indiceEditorActual = 0\r\n    } else {\r\n      this.textoEditores[0] = \"\"\r\n    }\r\n  }\r\n\r\n  guardar() {\r\n    var file = new File([this.textoEditores[this.indiceEditorActual]], \"Codigo.ty\", {\r\n      type: \"text/plain\",\r\n    });\r\n    saveAs(file)\r\n  }\r\n\r\n  selectReporte(opcion: string) {\r\n    this.reporteSelccionado = opcion\r\n\r\n  }\r\n\r\n  imprimir() {\r\n  }\r\n\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-lg navbar-dark \">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\"\r\n        aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"navbar\" id=\"navbarColor01\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n                <button (click)=\"selectReporte('editor')\" type=\"button\" class=\"btn btn-primary principal\">Compilador</button>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <button (click)=\"selectReporte('arbolAst')\" class=\"btn btn-primary opcion\">Arbol AST</button>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <button (click)=\"selectReporte('tablaSimbolos')\" type=\"button\" class=\"btn btn-primary opcion\">REPORTES</button>\r\n            </li>\r\n            <!-- <li class=\"nav-item\">\r\n                <button (click)=\"selectReporte('tablaErrores')\" type=\"button\" class=\"btn btn-primary opcion\">Tabla de Errores</button>\r\n            </li> -->\r\n        </ul>\r\n    </div>\r\n</nav>\r\n\r\n<div class=\"card-body\">\r\n    \r\n<div style=\"width: 850px; height: 400px; margin: auto;\" class=\"monacoCointeiner\">\r\n    <div class=\"card text-white tarjeta\">\r\n        XPATH\r\n                                 \r\n    <ngx-monaco-editor [options]=\"editorOptions\"\r\n    [(ngModel)]=\"xpath\" (init)=\"editorInit($event)\" aria-readonly=\"true\">\r\n</ngx-monaco-editor>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row justify-content-center contenedor\">\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                   \r\n                    <div class=\"card text-white tarjeta\">\r\n                    \r\n                        <div class=\"card-header\">\r\n                            <p class=\"lab\">Editor</p>\r\n                            <div *ngFor=\"let texto of textoEditores; let i = index; \"  (click)=\"indiceEditorActual = i\" type=\"button\" class=\"btn btn-primary tab verde\">\r\n                                <div class=\"equis\">TAB_{{i}}</div>\r\n                                <div (click)=\"imprimir()\" type=\"button\" class=\"btn btn-primary equisa verde\" (click)=\"eliminarEditor(i)\">x</div>\r\n                            </div>\r\n                            <button (click)=\"agregarTab()\" type=\"button\" class=\"btn btn-primary mas verde\">+</button>\r\n                            <!-- Button trigger modal -->\r\n                            <button (click)=\"imprimir()\" type=\"button\" class=\"btn btn-primary op mas verde\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                                Cargar Archivo\r\n                            </button>\r\n                            <button (click)=\"guardar()\" type=\"button\" class=\"btn btn-primary op mas verde\">Guardar</button>\r\n                         \r\n                   \r\n                        </div>\r\n\r\n                    \r\n                        <div class=\"card-body\">\r\n                            <div style=\"width: auto; height: 450px;\" class=\"monacoCointeiner\">\r\n                                <ngx-monaco-editor [options]=\"editorOptions\"\r\n                                    [(ngModel)]=\"textoEditores[indiceEditorActual]\" (init)=\"editorInit($event)\"></ngx-monaco-editor>\r\n                            </div>\r\n\r\n                          \r\n                        </div>\r\n                        <br>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card text-white tarjeta\">\r\n                        <div class=\"card-header\">\r\n                            Consola\r\n                            <button (click)=\"compilar()\" type=\"button\" class=\"btn btn-primary mas verde\">Compilar</button>\r\n                            <button (click)=\"console=''\" type=\"button\" class=\"btn btn-primary mas op verde\">Limpiar</button>\r\n                       \r\n                        </div>\r\n                       \r\n                        <div class=\"card-body\">\r\n                            <div style=\"width: auto; height: 458px;\" class=\"monacoCointeiner\">\r\n                                <ngx-monaco-editor [options]=\"consoleOptions\"\r\n                                    [(ngModel)]=\"console\" (init)=\"editorInit($event)\" aria-readonly=\"true\">\r\n                                </ngx-monaco-editor>\r\n                         \r\n                            </div>\r\n\r\n                        </div>\r\n                        <br>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"reporteSelccionado === 'tablaSimbolos'\">\r\n        <app-tabla-simbolos [tablaSimbolos]=\"tablaSimbolos\"  ></app-tabla-simbolos>\r\n    </div>\r\n    <div  id =\"app\" *ngIf=\"reporteSelccionado === 'arbolAst'\">\r\n        <img [src]=\"astBase64\" class=\"zoom\">\r\n        alv\r\n    </div>\r\n    <div id=\"app\"  style=\"width: auto; height: 1000px;\" >\r\n        <img [src]=\"astBase64\" class=\"zoom\">\r\n\r\n\r\n    </div>\r\n   \r\n</div>\r\n<script>\r\n  export  function prueba(){\r\n        console.log(this.astBase64)\r\n \r\n    }\r\n   \r\n\r\n\r\n</script>\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Cargar archivo de entrada</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"input-group\">\r\n                    <div class=\"custom-file\">\r\n                        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\"\r\n                                aria-describedby=\"inputGroupFileAddon01\" (change)=\"seleccionarArchivo($event)\">\r\n                        <label class=\"custom-file-label\" for=\"inputGroupFile01\" id=\"choosedFile\"\r\n                                accept=\".xml\">{{nombreArchivo}}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"cargarArchivo()\" data-dismiss=\"modal\">Continuar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- fin de boostrap -->\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { EditorComponent } from './components/editor/editor.component';\r\nimport { MonacoEditorModule, MONACO_PATH } from '@materia-ui/ngx-monaco-editor';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ArbolAstComponent } from 'src/app/components/arbol-ast/arbol-ast.component';\nimport { TablaSimbolosComponent } from './components/tabla-simbolos/tabla-simbolos.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EditorComponent,\r\n    ArbolAstComponent,\r\n    TablaSimbolosComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MonacoEditorModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MONACO_PATH,\r\n      useValue: 'https://unpkg.com/monaco-editor@0.19.3/min/vs'\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TipoVal;\n(function (TipoVal) {\n    TipoVal[\"ENTERO\"] = \"ENTERO\";\n    TipoVal[\"ID\"] = \"ID\";\n    TipoVal[\"DECIMAL\"] = \"DECIMAL\";\n    TipoVal[\"CADENA\"] = \"CADENA\";\n    TipoVal[\"ARROBA\"] = \"ARROBA\";\n    TipoVal[\"PUNTO\"] = \"PUTNO\";\n    TipoVal[\"LANG\"] = \"LANG\";\n    TipoVal[\"TEXTO\"] = \"TEXTO\";\n    TipoVal[\"POSICION\"] = \"POSICION\";\n    TipoVal[\"NODO\"] = \"NODO\";\n    TipoVal[\"BOLEANO\"] = \"BOLEANO\";\n    TipoVal[\"LAST\"] = \"LAST\";\n})(TipoVal = exports.TipoVal || (exports.TipoVal = {}));\n","<div class=\"row justify-content-center tabla\">\r\n    <div class=\"col-md-8 tab\">\r\n        <ul class=\"nav nav-tabs justify-content-center\">\r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#simbolos\">Tabla de Símbolos</a>\r\n            </li>\r\n        </ul>\r\n       \r\n        <div id=\"myTabContent\" class=\"tab-content\">\r\n            <div class=\"tab-pane fade in active show\" id=\"simbolos\">\r\n                <div class=\"col-md-12\">\r\n                    <br>\r\n                    <div style=\"width: auto; height: auto;\">\r\n                        <table class=\"table table-hover table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>NOMBRE</td>\r\n                                    <td>TIPO_SIMBOLO</td>\r\n                                    <td>AMBITO</td>\r\n                                    <td>COLUMNA</td>\r\n                                    <td>FILA</td>\r\n                                    <td>VALOR</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let fila of tablaSimbolos\">\r\n                                    <td>{{fila.nombre}}</td>\r\n                                    <td>{{fila.tipo}}</td>\r\n                                    <td>-{{fila.listaAmbito.join(\"-\")}}-</td>\r\n                                    <td>{{fila.columna}}</td>\r\n                                    <td>{{fila.fila}}</td>\r\n                                    <td>--{{fila.valor}}--</td>\r\n                                </tr>\r\n                                <tr *ngFor=\"let fila of tablaSimbolos\">\r\n                                    <td>ALV</td>\r\n                                    <td>ALV</td>\r\n                                    <td>as</td>\r\n                                    <td>{{fila.columna}}</td>\r\n                                    <td>{{fila.fila}}</td>\r\n                                    <td>--{{fila.valor}}--</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div style=\"width: auto; height: auto;\">\r\n                        <ul class=\"nav nav-tabs justify-content-center\">\r\n                            <li class=\"nav-item active\">\r\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#simbolos\">Tabla de Símbolos</a>\r\n                            </li>\r\n                        </ul>\r\n                        <table class=\"table table-hover table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>NOMBRE</td>\r\n                                    <td>TIPO_SIMBOLO</td>\r\n                                    <td>AMBITO</td>\r\n                                    <td>COLUMNA</td>\r\n                                    <td>FILA</td>\r\n                                    <td>VALOR</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let fila of tablaSimbolos\">\r\n                                    <td>{{fila.nombre}}</td>\r\n                                    <td>{{fila.tipo}}</td>\r\n                                    <td>-{{fila.listaAmbito.join(\"-\")}}-</td>\r\n                                    <td>{{fila.columna}}</td>\r\n                                    <td>{{fila.fila}}</td>\r\n                                    <td>--{{fila.valor}}--</td>\r\n                                </tr>\r\n                                <tr *ngFor=\"let fila of tablaSimbolos\">\r\n                                    <td>ALV</td>\r\n                                    <td>ALV</td>\r\n                                    <td>as</td>\r\n                                    <td>{{fila.columna}}</td>\r\n                                    <td>{{fila.fila}}</td>\r\n                                    <td>--{{fila.valor}}--</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br>\r\n                </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"errores\">\r\n                <div class=\"col-md-12\">\r\n                    <br>\r\n                    <div style=\"width: auto; height: auto;\">\r\n                        <table class=\"table table-danger table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>hola</td>\r\n                                    <td>mundo</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>2</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabla-simbolos',\n  templateUrl: './tabla-simbolos.component.html',\n  styleUrls: ['./tabla-simbolos.component.css']\n})\nexport class TablaSimbolosComponent implements OnInit {\n\n  @Input() tablaSimbolos:any \n            error:any\n\n  constructor() {\n\n\n      }\n\n  ngOnInit(): void {\n  }\n\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Fila {\n    constructor(nombre, tipo, listaAmbito, fila, columna, valor) {\n        this.nombre = nombre;\n        this.tipo = tipo;\n        this.listaAmbito = listaAmbito;\n        this.fila = fila;\n        this.columna = columna;\n        this.valor = valor;\n    }\n}\nexports.Fila = Fila;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Graficas;\n(function (Graficas) {\n    function formatId(numId) {\n        return \"nodo\" + numId.toString();\n    }\n    function defNodo(nodoId, etiqueta) {\n        return formatId(nodoId) + \"[label=\\\"\" + etiqueta + \"\\\"] \\n\";\n    }\n    Graficas.defNodo = defNodo;\n    function defEdge(id1, id2) {\n        return formatId(id1) + \" -> \" + formatId(id2) + \"\\n\";\n    }\n    Graficas.defEdge = defEdge;\n    function getElement(id, etiqueta, idPadre) {\n        let dotText = \"\";\n        dotText += defNodo(id, etiqueta);\n        dotText += defEdge(idPadre, id);\n        return dotText;\n    }\n    Graficas.getElement = getElement;\n})(Graficas = exports.Graficas || (exports.Graficas = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graficas_1 = require(\"../Graficas/Graficas\");\nclass EtiquetaInicio {\n    constructor(listaAtributos, linea, columna, idSent) {\n        this.linea = linea;\n        this.columna = columna;\n        this.idSent = idSent;\n        listaAtributos.forEach(atributo => {\n            if (atributo.nombre == \"version\") {\n                this.version = atributo.valor;\n            }\n            else if (atributo.nombre == \"encoding\") {\n                this.encoding = atributo.valor;\n            }\n        });\n    }\n    getCstDotA(idPadre) {\n        let texto = \"\";\n        texto += Graficas_1.Graficas.getElement(this.idSent, \"TAG_CONFIGURACION\", idPadre);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 1, \"AbreTagConf\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 2, \"<?\", this.idSent + 1);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 3, \"version\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 4, this.version.split(\"\\\"\").join(\"\\\"\\\"\"), this.idSent + 3);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 5, \"encoding\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 6, this.encoding.split(\"\\\"\").join(\"\\\"\\\"\"), this.idSent + 5);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 7, \"CierreTagConf\", this.idSent);\n        texto += Graficas_1.Graficas.getElement(this.idSent + 8, \"?>\", this.idSent + 7);\n        return texto;\n    }\n}\nexports.EtiquetaInicio = EtiquetaInicio;\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EditorComponent } from \"./components/editor/editor.component\";\r\nimport { ArbolAstComponent } from 'src/app/components/arbol-ast/arbol-ast.component'\r\nimport { TablaSimbolosComponent } from 'src/app/components/tabla-simbolos/tabla-simbolos.component'\r\nimport { TablaErroresComponent } from 'src/app/components/tabla-errores/tabla-errores.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditorComponent,\r\n    children: [\r\n      {path: 'arbolAst', component: ArbolAstComponent},\r\n      {path: 'tablaDeSimbolos', component:TablaSimbolosComponent},\r\n      {path: 'tablaDeErrores', component: TablaErroresComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}